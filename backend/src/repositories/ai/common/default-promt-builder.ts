import { IPromptBuilder } from './types'

export class DefaultPromptBuilder implements IPromptBuilder {
  private _oldBuildPrompt = (input: string) => {
    return `
Ты — помощник, который преобразует текстовый список покупок в структурированный JSON. Пользователь пишет список товаров с пожеланиями в свободной форме. Твоя задача — извлечь информацию и представить её в виде массива объектов.

Каждый объект должен содержать поля:
	•	name — [строка] название товара и бренд (например, “молоко”, “батон”, “молоко 3.2%”, "туалетная бумага zewa", "молоко простоквашино 3.2%")
	•	quantity — [строка] количество или объём (например, “1 л” - это "1", “2 штуки” - это "2", “1 упаковка” - это "1", “500 г” - это "0.5", “3 пачки” - это "3", “по 2 литра” - это "2")
	•	priceCategory — [строка] желаемая ценовая категория. Возможные значения:
    →	"cheapest" - самый дешевый
    →	"popular" - популярный
    →	"mostExpensive" - самый дорогой

⚠️ Поле quantity не может быть пустым. Всегда ставь "1", если не указано иное.

⚠️ Обязательно указывай priceCategory даже если явно не написано — например, если в конце сказано “всё самое дешевое”, применяй это ко всем товарам, которым не указали цену напрямую.

⚠️ Если в списке есть товары с разными ценовыми категориями, то указывай priceCategory для каждого товара отдельно. Например, если в списке есть "молоко дешевое", "сыр норм" и "батон дорогой", то результат будет:
[
  {
    "name": "молоко",
    "quantity": "1",
    "priceCategory": "cheapest"
  },
  {
    "name": "сыр",
    "quantity": "1",
    "priceCategory": "popular"
  },
  {
    "name": "батон",
    "quantity": "1",
    "priceCategory": "mostExpensive"
  }
]

⚠️ Слова "нормальный", "норм", "любой", "средний", "обычный" и "стандартный" не указывают на ценовую категорию. Если в списке есть такие слова, но нет явной инструкции по цене, используй "popular" как значение по умолчанию, а сами слова игнорируй.

❗ Не оставляй поле priceCategory пустым. Если явно не указано и нет общей инструкции вроде “всё самое дешевое”, используй "popular" как значение по умолчанию.

Верни только JSON-массив, без пояснений и форматирования текста. Форматировать JSON не нужно, просто верни его как есть.

Список: ${input}
    `.trim()
  }

  buildPrompt = (input: string) => {
    return `Ты — помощник, который преобразует текстовый список покупок в структурированный JSON. Пользователь пишет список товаров с пожеланиями в свободной форме. Твоя задача — извлечь информацию и представить её в виде массива объектов.

Каждый объект должен содержать поля:
  • name — [строка] название товара и бренд (например, “молоко”, “батон”, “молоко 3.2%”, "туалетная бумага zewa", "молоко простоквашино 3.2%")
  • quantity — [строка] количество или объём. Если указано “4 штуки”, “3 упаковки”, “500 г” и т.п., выдели только число (в виде строки). Если не указано количество — всегда ставь "1".
  • priceCategory — [строка] ценовая категория. Возможные значения:
    → "cheapest" - самый дешевый  
    → "popular" - популярный (по умолчанию)  
    → "mostExpensive" - самый дорогой

⚠️ Определяй priceCategory **ТОЛЬКО на основе слов, относящихся к конкретному товару**. Не применяй категорию к другим товарам, если она явно не указана.

Примеры слов, указывающих на цену:
- "дешёвый", "недорогой" → cheapest
- "дорогой", "самый дорогой" → mostExpensive
- "нормальный", "обычный", "любой", "средний", "стандартный" → не указывают на цену → использовать popular

⚠️ Если у товара нет явного указания цены — используй "popular".

⚠️ Даже если в конце указано “всё самое дешёвое”, применяй это **только к товарам без индивидуального указания цены**.

❗ Всегда возвращай корректные значения всех трёх полей. quantity не может быть пустым. priceCategory тоже не может быть пустым.

❗ Верни **только JSON-массив**, без пояснений и форматирования. Пример правильного ответа:
[{"name": "молоко", "quantity": "1", "priceCategory": "cheapest"}, ...]

Список: ${input}`.trim()
  }
}
