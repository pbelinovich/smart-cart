import { html } from 'teleform'
import { ICartEntity, PriceCategory } from '@server'
import { formatPrice } from './format-price'

const priceCategoryEmoji: Record<PriceCategory, string> = {
  cheapest: 'üí∏',
  popular: 'üî•',
  mostExpensive: 'üí∞',
}

export const formatCart = (cart: ICartEntity) => {
  const header = ['üõí ', html.bold(cart.shopName), '\nüíµ ', html.italic('–ò—Ç–æ–≥–æ:'), ' ', html.bold(formatPrice(cart.totalPrice))].join('')
  const inStock = cart.productsInStock.data
    .map(p =>
      [
        '‚Ä¢ ',
        p.marketplaceName,
        ' x',
        p.quantity,
        ' ‚Äî ',
        html.bold(formatPrice(p.marketplacePrice)),
        ' ',
        priceCategoryEmoji[p.priceCategory],
      ].join('')
    )
    .join('\n')

  const outOfStock = cart.productsAreOutOfStock.data.map(p => ['‚Ä¢ ', p.queryName, ' x', p.quantity].join('')).join('\n')
  const stockBlock = ['üßæ ', html.bold('–ù–∞–π–¥–µ–Ω–æ:'), '\n', inStock || html.italic('‚Äî –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.')].join('')
  const outOfStockBlock = outOfStock ? ['\n\n‚ùóÔ∏è ', html.bold('–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏:'), '\n', outOfStock].join('') : ''

  return [header, '\n\n', stockBlock, outOfStockBlock].join('')
}
